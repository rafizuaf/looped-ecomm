
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(BUYER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  orders    Order[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Int
  cost        Int
  stock       Int
  category    String?
  images      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  orders      OrderItem[]

  @@index([deletedAt])
}

model Order {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  status    OrderStatus @default(PENDING)
  items     OrderItem[]
  total     Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?

  @@index([deletedAt])
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  subtotal  Int
}

model AuditLog {
  id          String   @id @default(uuid())
  action      String
  entity      String
  entityId    String
  timestamp   DateTime @default(now())
  performedBy String

  @@index([entity, entityId])
}

enum Role {
  SUPERADMIN
  BUYER
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
}